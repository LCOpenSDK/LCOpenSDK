#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
#ifndef LCNEWLIVEPREVIEWMODULE_SWIFT_H
#define LCNEWLIVEPREVIEWMODULE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import CoreMedia;
@import Foundation;
@import LCBaseModule;
@import LCOpenSDKDynamic;
@import ObjectiveC;
@import UIKit;
#endif

#import <LCNewLivePreviewModule/LCNewLivePreviewModule.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LCNewLivePreviewModule",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
typedef SWIFT_ENUM(NSInteger, CallType, closed) {
  CallTypeVideoCall = 0,
  CallTypeAudioCall = 1,
};

@class LCVisualIntercomControlBar;

SWIFT_PROTOCOL("_TtP22LCNewLivePreviewModule27ILCVisualIntercomControlBar_")
@protocol ILCVisualIntercomControlBar <NSObject>
/// 点击挂断
/// \param controlBar 控制功能栏
///
/// \param hangup 是否挂断
///
- (void)controlBarWithDoHangup:(LCVisualIntercomControlBar * _Nonnull)controlBar;
/// 点击接听
/// \param controlBar 控制功能栏
///
/// \param isAnswer 是否接听
///
- (void)controlBarWithDoAnswer:(LCVisualIntercomControlBar * _Nonnull)controlBar;
/// 翻转摄像头
/// \param controlBar 控制功能栏
///
/// \param isFrontCamera true: 前置，false：后置
///
- (void)controlBar:(LCVisualIntercomControlBar * _Nonnull)controlBar doFilp:(BOOL)isFrontCamera;
/// 开关摄像头
/// \param controlBar 控制功能栏
///
/// \param isCameraOn on/off
///
- (void)controlBar:(LCVisualIntercomControlBar * _Nonnull)controlBar switchCamera:(BOOL)isCameraOn;
/// 开关麦克风
/// \param controlBar 控制功能栏
///
/// \param isMicrophoneOn on/off
///
- (void)controlBar:(LCVisualIntercomControlBar * _Nonnull)controlBar switchMicrophone:(BOOL)isMicrophoneOn;
@end

@class NSCoder;

SWIFT_CLASS("_TtC22LCNewLivePreviewModule19LCBottomControlView")
@interface LCBottomControlView : UIView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)showOn:(UIView * _Nonnull)superView clickBlock:(void (^ _Nonnull)(enum CallType))clickBlock;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

/// 双向对讲控制按钮
typedef SWIFT_ENUM(NSInteger, LCIntercomControlItem, closed) {
  LCIntercomControlItemAnswer = 30001,
  LCIntercomControlItemHangup = 30002,
  LCIntercomControlItemFilp = 30003,
  LCIntercomControlItemCamera = 30004,
  LCIntercomControlItemMicrophone = 30005,
};

@class UIImage;
@class NSString;
@class UIFont;

SWIFT_CLASS("_TtC22LCNewLivePreviewModule21LCLandscapeSelectItem")
@interface LCLandscapeSelectItem : NSObject
@property (nonatomic, strong) UIImage * _Nullable normalImage;
@property (nonatomic, copy) NSString * _Nullable normalTitle;
@property (nonatomic, strong) UIImage * _Nullable selectedImage;
@property (nonatomic, copy) NSString * _Nullable selectedTitle;
@property (nonatomic, strong) UIFont * _Nullable titleFont;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC22LCNewLivePreviewModule26LCLandscapeVideoSelectView")
@interface LCLandscapeVideoSelectView : UIView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)configSelectItems:(NSArray<LCLandscapeSelectItem *> * _Nonnull)selectedItems selectHandle:(void (^ _Nullable)(NSInteger))selectHandle;
- (void)showAlert;
@end


SWIFT_CLASS("_TtC22LCNewLivePreviewModule26LCVisualIntercomControlBar")
@interface LCVisualIntercomControlBar : UIView
/// 代理
@property (nonatomic, weak) id <ILCVisualIntercomControlBar> _Nullable controlBarDelegate;
- (nonnull instancetype)initWithBarWidth:(CGFloat)barWidth OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC22LCNewLivePreviewModule29LCVisualIntercomPlayContainer")
@interface LCVisualIntercomPlayContainer : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end

/// 双向对讲状态
typedef SWIFT_ENUM(NSInteger, LCVisualIntercomStatus, closed) {
  LCVisualIntercomStatusRinging = 0,
  LCVisualIntercomStatusAnswered = 1,
};

@protocol UIViewControllerTransitionCoordinator;
@class NSBundle;

SWIFT_CLASS("_TtC22LCNewLivePreviewModule26LCVisualTalkViewController")
@interface LCVisualTalkViewController : LCBaseViewController
@property (nonatomic) BOOL isNeedSoftEncode;
@property (nonatomic, copy) void (^ _Nullable dismissCallback)(void);
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
/// 配置内容，仅作为配置信息使用，不要在内部调用UI相关的方法
/// \param videoSource 设备信息
///
/// \param status 呼入/呼出   0：呼入  1：呼出
///
- (void)configIntercomWithStatus:(NSInteger)status;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class LCH264Encoder;
@class NSData;

@interface LCVisualTalkViewController (SWIFT_EXTENSION(LCNewLivePreviewModule)) <LCH264EncoderDelegate, LCVisualTalkCaptureSessionDelegate>
- (void)h264Encoder:(LCH264Encoder * _Nonnull)encoder encodeData:(NSData * _Nonnull)data;
- (void)videoWithSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer;
@end


@interface LCVisualTalkViewController (SWIFT_EXTENSION(LCNewLivePreviewModule)) <LCOpenSDK_PlayRealListener>
- (void)onPlayBegan:(NSInteger)index;
- (void)onPlayFail:(NSString * _Null_unspecified)errCode errMsg:(NSString * _Null_unspecified)errMsg Type:(NSInteger)type Index:(NSInteger)index;
@end


@interface LCVisualTalkViewController (SWIFT_EXTENSION(LCNewLivePreviewModule)) <LCOpenSDK_TalkerListener, LCOpenSDK_TouchListener>
- (void)onTalkResult:(NSString * _Null_unspecified)error TYPE:(NSInteger)type;
- (void)onAudioRecord:(uint8_t * _Null_unspecified)pData dataLen:(int32_t)dataLen audioFormat:(int32_t)audioFormat sampleRate:(int32_t)sampleRate sampleDepth:(int32_t)sampleDepth;
- (void)onAudioReceive:(uint8_t * _Null_unspecified)pData dataLen:(int32_t)dataLen audioFormat:(int32_t)audioFormat sampleRate:(int32_t)sampleRate sampleDepth:(int32_t)sampleDepth;
@end


@interface LCVisualTalkViewController (SWIFT_EXTENSION(LCNewLivePreviewModule)) <ILCVisualIntercomControlBar>
- (void)controlBarWithDoHangup:(LCVisualIntercomControlBar * _Nonnull)controlBar;
- (void)controlBarWithDoAnswer:(LCVisualIntercomControlBar * _Nonnull)controlBar;
- (void)controlBar:(LCVisualIntercomControlBar * _Nonnull)controlBar doFilp:(BOOL)isFrontCamera;
- (void)controlBar:(LCVisualIntercomControlBar * _Nonnull)controlBar switchCamera:(BOOL)isCameraOn;
- (void)controlBar:(LCVisualIntercomControlBar * _Nonnull)controlBar switchMicrophone:(BOOL)isMicrophoneOn;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
